---
title: "Intro to data (lab 1 for BIOS 26122)"
author: "Dmitry Kondrashov"
format: html
editor: visual
---

## Description

The goal of this assignment is to introduce basic data description and visualization using base R and tidyverse packages. Specifically, you should be able to:

1.  Read in a data set as a data frame (or tibble) and report the number and types of variables, as well as the number of observations.
2.  Visualize a variable using a method appropriate for its type; observe the general shape of the distribution.
3.  Report descriptive statistics (e.g. counts, means, standard deviations) for numeric variables and generate cross tables for categorical variables.
4.  Perform an assessment of missing values and outliers and do basic data cleaning.

These are the first steps that one needs to do to begin working with a data set. Below you will see several real data sets to practice on.

```{r setup}
#| include: false
#| echo: false
library(tidyverse)
```

## Heart rates

The following data set contains heart rates measured and reported by students in my class Introduction to Quantitative Modeling for Biology. There are four different heart rates measured (two at rest and two after exercise) and the year it was measured.

```{r}
heart_rates <- read_csv("https://raw.githubusercontent.com/dkon1/intro-ml-bio/main/labs/data/HR_data_combined.csv")
```

1.  Examine the data frame (tibble) and report the number and types of variables and the number of observations

    There are 5 variables (columns), of which 4 are numeric and the 5th (year) is (arguably) categorical (even though it's a number, it's not meant for calculations).

2.  Make a histogram of one of the numeric variables of your choice; describe its shape (e.g. normal, uniform, bimodal) and comment on any interesting features.

```{r}
# base R:
hist(heart_rates$Ex2, main = 'Histogram of Ex2', xlab = "heart rate (bpm)")
# ggplot
heart_rates |> ggplot() + aes(x=Ex2) + geom_histogram() + ggtitle("Histogram of Ex2") + xlab("heart rate (bpm)")
```

The graph is fairly normal-shaped, but with a longer right tail.

3.  Compute the counts, means, and standard deviations of one of the numeric variables of your choice, separated by `Year` category.

```{r}
# base R
year_list = unique(heart_rates$Year)
for (year in year_list) {
  slice <- heart_rates$Year == year
  print(paste("In year", year, "number of observations of Ex2 is:", length(heart_rates$Ex2[slice])))
  print(paste("In year", year, "mean value of Ex2 is:", mean(heart_rates$Ex2[slice])))
  print(paste("In year", year, "standard deviation of Ex2 is:", sd(heart_rates$Ex2[slice])))
}
# tidyverse

heart_rates |> group_by(Year) |> summarise(num = n(), mean_ex2 = mean(Ex2), sd_ex2 = sd(Ex2))
```

4.  Visualize one of the numeric variables as a box plot or violin plot, separated by different years.

```{r}
# base R
boxplot(Ex2 ~ Year, data = heart_rates, main= "Ex2 for different years")
# ggplot
heart_rates |> ggplot() + aes(x=as.factor(Year), y = Ex2) + geom_boxplot() + ggtitle("Ex2 for different years") + xlab("year")
```

5.  Report if there are any missing values and if any points may be considered outliers.

```{r}
# base R to calculate by column
cat("The number of NAs in each column: ")
cat(colSums(is.na(heart_rates)))
cat("\n")
# tidyverse to calculate by row
heart_rates %>%
  rowwise() %>%
  mutate(sum_na = sum(is.na(c_across())))

```

In the histogram you can see some points that are

### Viral mutation rates

The following data set comes from <https://github.com/lauringlab/JVI_Gem_2018> and contains measurements of different viral species. The three numeric variables are evolutionary rate K, mutation rate mu, and genome size G. The categorical variables are fairly self-explanatory.

```{r}
viral_mut_rates <- read_csv("https://raw.githubusercontent.com/lauringlab/JVI_Gem_2018/master/Figure_1_mu_and_K_data.csv")
```

1.  Examine the data frame (tibble) and report the number and types of variables and the number of observations

    11 columns, of which 3 are numeric: G, K, mu, one logical, and the rest are categorical, 111 observations

2.  Make a histogram of one of the numeric variables of your choice; describe its shape (e.g. normal, uniform, bimodal) and comment on any interesting features.

```{r}
# base R:
hist(viral_mut_rates$G, main = 'Histogram of gene size', xlab = "size (Kbp?)")
# ggplot
viral_mut_rates |> ggplot() + aes(x=G) + geom_histogram() + ggtitle('Histogram of gene size') + xlab("size (Kbp?)")
```

3.  Compute the counts, means, and standard deviations of one of the numeric variables of your choice, separated by `group` category.

```{r}
# base R
group_list = unique(viral_mut_rates$group)
for (g in group_list) {
  slice <- viral_mut_rates$group == g
  print(paste("In group", g, "number of observations of G is:", length(viral_mut_rates$G[slice])))
  print(paste("In group", g, "mean value of G is:", mean(viral_mut_rates$G[slice])))
  print(paste("In group", g, "standard deviation of G is:", sd(viral_mut_rates$G[slice])))
}
# tidyverse

viral_mut_rates |> group_by(group) |> summarise(num = n(), mean_G = mean(G), sd_G = sd(G))
```

4.  Visualize one of the numeric variables as a box plot or violin plot, separated by group.

```{r}
# base R
boxplot(G ~ group, data = viral_mut_rates, main= "Genome size for different groups of viruses")
# ggplot
viral_mut_rates |> ggplot() + aes(x=group, y = G) + geom_boxplot() + ggtitle("Genome size for different groups of viruses") + xlab("virus group")
```

5.  Report if there are any missing values and if any points may be considered outliers.

```{r}
# base R to calculate by column
cat("The number of NAs in each column: ")
cat(colSums(is.na(viral_mut_rates)))
cat("\n")
# tidyverse to calculate by row
viral_mut_rates |> 
  select(G,K, mu) |> 
  rowwise() |> 
  mutate(sum_na = sum(is.na(c_across())))
```

### Neuroblastoma data

The following data set contains 22 scores of different from patients with neuroblastoma (a type of cancer) derived from cell-free DNA samples.

```{r}
neuro_blast <- read_csv("https://raw.githubusercontent.com/dkon1/intro-ml-bio/main/labs/data/r2_gse62564_GSVA_Metadata_selected.csv")
```

1.  Examine the data frame (tibble) and report the number and types of variables and the number of observations

    There are 24 columns, of which 22 are numeric, and two are categorical: sample id is a unique id so it won't be used in calculations, and high_risk is a logical variable (yes/no)

2.  Compare the distributions of two or more of the numeric variables of your choice using boxplots or other visualizations; describe how the distributions differ.

```{r}
# base R:
hist(neuro_blast$MYCN, main = 'Histogram of MYCN', xlab = "size (Kbp?)")
# ggplot
neuro_blast |> ggplot() + aes(x=MYCN) + geom_histogram() + ggtitle('Histogram of MYCN') + xlab("MYCN")
```

The histogram of MYCN is very non-normal, the biggest peak is at 0, with a long tail of higher values.

3.  Compute the counts, means, and standard deviations of one of the numeric variables of your choice, separated by `high_risk` category.

```{r}
# base R
risk_list = unique(neuro_blast$high_risk)
for (risk in risk_list) {
  slice <- neuro_blast$high_risk == risk
  print(paste("In group", risk, "number of observations of G is:", length(neuro_blast$MYCN[slice])))
  print(paste("In group", risk, "mean value of G is:", mean(neuro_blast$MYCN[slice])))
  print(paste("In group", risk, "standard deviation of G is:", sd(neuro_blast$MYCN[slice])))
}
# tidyverse

neuro_blast |> group_by(high_risk) |> summarise(num = n(), mean_MYCN = mean(MYCN), sd_MYCN = sd(MYCN))
```

You can see major differences in mean values of MYCN between high and low risk groups.

4.  Visualize one of the numeric variables as a box plot or violin plot, separated by high_risk category.

```{r}
# base R
boxplot(MYCN ~ high_risk, data = neuro_blast, main= "MYCN for different risk groups")
# ggplot
neuro_blast |> ggplot() + aes(x=high_risk, y = MYCN) + geom_boxplot() + ggtitle("MYCN for different risk groups") + xlab("High risk status")
```

5.  Report if there are any missing values and if any points may be considered outliers.

```{r}
# base R to calculate by column
cat("The number of NAs in each column: ")
cat(colSums(is.na(neuro_blast)))
cat("\n")
# tidyverse to calculate by row
neuro_blast |>  select(-c(`sample id`, high_risk)) |> 
  rowwise() |> 
  mutate(sum_na = sum(is.na(c_across())))
```
